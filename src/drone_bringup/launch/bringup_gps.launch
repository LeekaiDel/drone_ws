<launch>
<!--The Launch file for flight in the outdoor. Include main nodes for remote control, safe and link with GCS.-->

	<!-- sonar-->
<!--	<node pkg="drone_bringup" name="ultrasonic_node" type="ground_ultrasonic_ros.py" respawn="true" output="screen"/>-->

	<!-- run PX4 mavros run -->
	<include file="$(find mavros_link)/launch/px4.launch">
		<arg name="tgt_system" default="$(env DRONE_ID)"/>
		<arg name="tgt_component" default="$(env DRONE_ID)" />
		<arg name="gcs_ip" default="$(env MAVROS_GCS_IP)"/>
		<arg name="fcu_url" default="$(env MAVROS_FCU_URL)" />
		<arg name="fcu_port" default="$(env MAVROS_FCU_PORT)" />
	</include>
		
	<!-- run Rosbridge server -->
	<include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
	 <arg name="port" default="$(env ROSBRIDGE_SERVER_PORT)" />
 	 <arg name="address" default="$(env ROSBRIDGE_SERVER_IP)" />
	</include>

	<!-- run Safemode server -->
	<node pkg="drone_bringup" name="drone_safery" type="drone_safe_node.py" 	respawn="true" output="screen">
	<param name="max_angle" value="$(env DRONE_SAFE_MAX_ANGLE)"/>
	<param name="disarm_delay" value="$(env DRONE_SAFE_DISARM_DELAY)"/>
	</node>


	<!-- diagnostics node -->
	<node pkg="drone_bringup" name="drone_diagnostics_node" type="drone_diagnostics.py" 	respawn="true" output="screen">
	</node>


	<!-- RTK georef -->
	<node pkg="drone_bringup" name="geo_reference_node" type="geo_reference.py" respawn="true" output="screen">
    <param name="use_rel_alt" value="false"/>
	<param name="use_sonar" value="false"/>
	<param name="sonar_max" value="3.8"/>
	<param name="set_rel_alt_origin" value="true"/>

	</node>

	<!-- run external pose reg if use env param -->
	<group if="$(env USE_POSE_REG)">
		<!-- pose reg-->
		<node pkg="drone_reg" name="drone_pose_node" type="drone_pose_reg_node.py" respawn="true" output="screen">
		<param name="use_geo_mode" value="$(env DRONE_REG_USE_GEO_MODE)"/>
		</node>
	</group>


	<!-- run own pose reg if not use env param -->
	<group unless="$(env USE_POSE_REG)">
		   <!-- set reg-->
		<node pkg="drone_reg" name="drone_reg_node" type="drone_reg_cpp" respawn="true" output="screen">
		<param name="use_planner" value="$(env DRONE_REG_USE_PLANNER)"/>
		<param name="use_geo_mode" value="$(env DRONE_REG_USE_GEO_MODE)"/>
		<param name="yaml_path" value="$(find drone_reg)/cfg/pid_params_laba.yaml"/>
		<param name="use_alt_sonar" value="false"/>
		</node>
	</group>



	<!-- RTK client -->
	<node pkg="rtk_brodcast" name="RTK_client_node" type="client.py" respawn="true" output="screen">
	</node>

	<!--broadcast server-->
	<node pkg="broadcast_aggregation_server" name="broadcast_aggregation_node" type="broadcast_aggregation_node.py" respawn="true" output="screen">
	<remap from="mavros/local_position/pose" to="geo/local_pose" />
	</node>

</launch>
